<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context.xsd ">


	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location">
			<value>jdbc.properties</value>
		</property>
	</bean>

	<bean id="dataSourceId"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>

	<!-- olusturdugumuz datasource'yi jdbcTemplate'e veriyoruz. -->

	<bean id="jdbcTemplateId" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg ref="dataSourceId"/>
	</bean>
	
	<!-- jdbcTemplate'yi DAO Layer'ımıza veriyoruz. -->
	<!-- Araya bir katman daha koymus olduk -->
	<bean id="personDAOImplId" class="_02.jdbc.template.dao.PersonJDBCTemplateImplDAO">
		<constructor-arg ref="jdbcTemplateId"/>
	</bean>


</beans>
